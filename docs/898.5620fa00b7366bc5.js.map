{"version":3,"file":"898.5620fa00b7366bc5.js","mappings":"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","names":["i0","ctx_r1","uploadProgress","routes","path","component","AutoGeneratorComponent","constructor","$accountService","$alertService","$router","$route","this","fileHasBeenSelected","accountService","alertService","router","route","ngOnInit","fileName","ngAfterViewInit","progressChildren","changes","subscribe","comps","undefined","first","nativeElement","removeAttribute","onFileSelected","event","file","target","files","name","onSubmit","fileUpload","submitted","formData","FormData","append","type","error","upload$","uploadTimeSlotsFile","pipe","finalize","reset","uploadSub","next","value","complete","info","navigate","relativeTo","cancelUpload","unsubscribe","static","t","i1","i2","core","Xpm","selectors","viewQuery","rf","ctx","_r3","_r0","click","$event","AutoGeneratorComponent_div_22_Template","_c1","AutoGeneratorRoutingModule","oAB","cJS","RouterModule","forChild","AutoGeneratorModule","CommonModule","FormsModule","ReactiveFormsModule"],"sourceRoot":"webpack:///","sources":["./src/app/admin/accounts/max-flow-schedules/auto-generator.component.html","./src/app/admin/accounts/max-flow-schedules/auto-generator-routing.module.ts","./src/app/admin/accounts/max-flow-schedules/auto-generator.component.ts","./src/app/admin/accounts/max-flow-schedules/auto-generator.module.ts"],"sourcesContent":["<fieldset>\n    <legend>Upload Timeslots & Generate Schedules</legend>\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"mb-3 col-6\">\n                <div class=\"file-upload\">\n\n                    {{fileName || \"No file uploaded yet.\"}}\n\n                    <button type=\"button\" color=\"primary\" class=\"btn btn-primary upload-button\"\n                        (click)=\"fileUpload.click()\">\n                        <img src=\"./assets/images/Upload.png\" />\n                    </button>\n\n                </div>\n                <form method=\"post\" enctype=\"multipart/form-data\">\n                    <div>\n                        <!-- <label for=\"file\">Choose file to upload</label> -->\n                        <input type=\"file\" class=\"file-input\" #fileUpload accept=\".xlsx\" required\n                            (change)=\"onFileSelected($event)\" />\n                    </div>\n                </form>\n            </div>\n            <div >\n                <div class=\"row\">\n                    <div class=\"col-1\">\n                        <button [disabled]=\"!fileHasBeenSelected || submitted\" (click)=\"onSubmit($event, fileUpload)\"\n                            class=\"btn btn-primary\">Submit</button>\n                    </div>\n                    <div class=\"col-1\">\n                        <a [routerLink]=\"['../../']\"  class=\"btn btn-primary\">Back</a>\n                    </div>\n                </div>\n            </div>\n\n            <div *ngIf=\"submitted\" col-12>\n                <label for=\"file\">File progress:</label>\n                <progress #progressFile id=\"progress-bar\" max=\"100\" [value]=uploadProgress></progress>\n            </div>\n        </div>\n    </div>\n</fieldset>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AutoGeneratorComponent } from './auto-generator.component';\n\nconst routes: Routes = [\n  { path: 'generate',  component: AutoGeneratorComponent  },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AutoGeneratorRoutingModule { }\n","import { AfterViewInit, Component, ElementRef, OnInit, QueryList, Renderer2, ViewChildren } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription/* , finalize */ } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { AccountService, AlertService } from 'src/app/_services';\n\n@Component({\n  selector: 'app-auto-generator',\n  templateUrl: './auto-generator.component.html',\n  styleUrls: ['./auto-generator.component.less']\n})\nexport class AutoGeneratorComponent implements OnInit, AfterViewInit{\n  @ViewChildren(\"progressFile\") progressChildren: QueryList<ElementRef>;\n  \n  private accountService: AccountService;\n  private alertService: AlertService;\n  private router: Router;\n  private route: ActivatedRoute;\n  private renderer: Renderer2;\nfileName: any;\n  fileHasBeenSelected: boolean = false;\n  submitted: boolean;\n  uploadSub: Subscription;\n  uploadProgress: number = 0;\n\n\tconstructor($accountService: AccountService, $alertService: AlertService, $router: Router, $route: ActivatedRoute) {\n\t\tthis.accountService = $accountService;\n\t\tthis.alertService = $alertService;\n\t\tthis.router = $router;\n\t\tthis.route = $route;\n\t}\n  ngOnInit(): void {\n    this.fileName = \"\";\n  }\n  ngAfterViewInit(): void {\n    /* We need the code below because if ngIf directive in the template file  */\n    this.progressChildren.changes.subscribe((comps: QueryList <ElementRef>) =>\n    {\n      if(comps.first != undefined)\n        comps.first.nativeElement.removeAttribute(\"value\")\n    });\n  }\n  onFileSelected(event: Event) {\n    const file: File = (event.target as HTMLInputElement).files[0];\n\n    if (file) {\n      this.fileHasBeenSelected = true;\n      this.fileName = file.name;\n    } else {\n      this.fileHasBeenSelected = false;\n    }\n  }\n\n  onSubmit(event: any, fileUpload: any) {\n\n    const file: File = fileUpload.files[0];\n\n    if (file) {\n      this.submitted = true;\n      this.fileName = file.name;\n      const formData = new FormData();\n      formData.append(\"file\", file);\n\n      if (file.type == \"application/x-msdownload\") {\n        this.alertService.error(\"File must be an .xlsx file type\");\n        return;\n      }\n\n      const upload$ = this.accountService.uploadTimeSlotsFile(formData)\n        .pipe(\n          finalize(() => {\n            this.reset();\n          })\n        );\n\n      this.uploadSub = upload$.subscribe({\n        next: (value) => {\n        },\n        complete: () => {\n          this.alertService.info(\"Done\");\n          this.submitted = false;\n          this.uploadProgress = -1;\n          this.router.navigate(['../../'], { relativeTo: this.route });\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.submitted = false;\n        }\n      });\n    }\n  }\n  cancelUpload() {\n    this.uploadSub.unsubscribe();\n    this.reset();\n  }\n\n  reset() {\n    this.uploadProgress = null;\n    this.uploadSub = null;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AutoGeneratorComponent } from './auto-generator.component';\nimport { AutoGeneratorRoutingModule } from './auto-generator-routing.module';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    AutoGeneratorRoutingModule\n  ],\n  declarations: [\n    AutoGeneratorComponent\n  ],\n  exports:[\n    AutoGeneratorComponent,\n  ],\n  \n})\nexport class AutoGeneratorModule { }\n"],"x_google_ignoreList":[]}